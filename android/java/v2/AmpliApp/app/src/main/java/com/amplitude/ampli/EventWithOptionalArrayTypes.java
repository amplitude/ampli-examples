//
// Ampli - A strong typed wrapper for your Analytics
//
// This file is generated by Amplitude.
// To update run 'ampli pull java-ampli-v2'
//
// Required dependencies: com.amplitude:analytics-android:0.1.0-beta.8
// Tracking Plan Version: 0
// Build: 1.0.0
// Runtime: android:java-ampli-v2
//
// [View Tracking Plan](https://data.amplitude.com/test-codegen/Test%20Codegen/events/main/latest)
//
// [Full Setup Instructions](https://data.amplitude.com/test-codegen/Test%20Codegen/implementation/java-ampli-v2)
//
package com.amplitude.ampli;

import java.util.HashMap;
import com.amplitude.android.events.BaseEvent;

public class EventWithOptionalArrayTypes extends BaseEvent {
    private EventWithOptionalArrayTypes(Builder builder) {
        eventType = "Event With Optional Array Types";
        setEventProperties(builder.properties);
    }

    public static IBuild builder() { return new Builder(); }

    // Inner Builder class with required properties
    public static class Builder implements IBuild {
        private final HashMap<String, Object> properties = new HashMap<>();

        private Builder() {

        }

        /**
         * Description for optional boolean array
         */
        public IBuild optionalBooleanArray(Boolean[] optionalBooleanArray) {
            this.properties.put("optionalBooleanArray", optionalBooleanArray);
            return this;
        }

        /**
         * Description for optional object array
         */
        public IBuild optionalJsonArray(Object[] optionalJsonArray) {
            this.properties.put("optionalJSONArray", optionalJsonArray);
            return this;
        }

        /**
         * Description for optional number array
         */
        public IBuild optionalNumberArray(Double[] optionalNumberArray) {
            this.properties.put("optionalNumberArray", optionalNumberArray);
            return this;
        }

        /**
         * Description for optional string array
         */
        public IBuild optionalStringArray(String[] optionalStringArray) {
            this.properties.put("optionalStringArray", optionalStringArray);
            return this;
        }

        public EventWithOptionalArrayTypes build() {
            return new EventWithOptionalArrayTypes(this);
        }
    }

    /** Build interface with optional properties */
    public interface IBuild {
        IBuild optionalBooleanArray(Boolean[] optionalBooleanArray);
        IBuild optionalJsonArray(Object[] optionalJsonArray);
        IBuild optionalNumberArray(Double[] optionalNumberArray);
        IBuild optionalStringArray(String[] optionalStringArray);
        EventWithOptionalArrayTypes build();
    }
}
